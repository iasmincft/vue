{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_navbar = _resolveComponent(\"navbar\");\n  const _component_page_viewer = _resolveComponent(\"page-viewer\");\n  const _component_create_page = _resolveComponent(\"create-page\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_navbar, {\n    pages: $data.pages,\n    \"active-page\": $data.activePage,\n    \"nav-link-click\": index => $data.activePage = index\n  }, null, 8 /* PROPS */, [\"pages\", \"active-page\", \"nav-link-click\"]), $data.pages.length > 0 ? (_openBlock(), _createBlock(_component_page_viewer, {\n    key: 0,\n    page: $data.pages[$data.activePage]\n  }, null, 8 /* PROPS */, [\"page\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_create_page, {\n    \"page-created\": _ctx.pageCreated\n  }, null, 8 /* PROPS */, [\"page-created\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_navbar","pages","$data","activePage","index","length","_createBlock","_component_page_viewer","page","_component_create_page","_ctx","pageCreated"],"sources":["/home/iasmin/Documentos/Estudos/vue/vue-start-spa/src/App.vue"],"sourcesContent":["<template>\n  <navbar\n    :pages=\"pages\"\n    :active-page=\"activePage\"\n    :nav-link-click=\"(index) => activePage = index\"\n  ></navbar>\n\n  <page-viewer\n    v-if=\"pages.length > 0\"\n    :page=\"pages[activePage]\"\n  ></page-viewer>\n\n  <create-page\n    :page-created\n  ></create-page>\n</template>\n\n<script>\n\nimport Navbar from './components/Navbar.vue';\nimport PageViewer from './components/PageViewer.vue';\n\nexport default{\n  components: {\n    Navbar,\n    PageViewer\n  },\n  created() {\n    this.getPages();\n  },\n  data() {\n    return {\n      activePage: 0,\n      pages: []\n    }\n  },\n  methods: {\n    async getPages() {\n      let res = await fetch('pages.json');\n      let data = await res.json();\n\n      this.pages = data;\n    }\n  }\n}\n</script>"],"mappings":";;;;;6DACEA,YAAA,CAIUC,iBAAA;IAHPC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IACZ,aAAW,EAAEC,KAAA,CAAAC,UAAU;IACvB,gBAAc,EAAGC,KAAK,IAAKF,KAAA,CAAAC,UAAU,GAAGC;uEAInCF,KAAA,CAAAD,KAAK,CAACI,MAAM,Q,cADpBC,YAAA,CAGeC,sBAAA;;IADZC,IAAI,EAAEN,KAAA,CAAAD,KAAK,CAACC,KAAA,CAAAC,UAAU;0EAGzBJ,YAAA,CAEeU,sBAAA;IADZ,cAAY,EAAZC,IAAA,CAAAC;EAAY,0C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}